// Generated by Dagger (https://dagger.dev).
package com.deweiwang.bookkeeping.expense;

import com.deweiwang.bookkeeping.data.AccountRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ExpenseViewModel_Factory implements Factory<ExpenseViewModel> {
  private final Provider<AccountRepository> repositoryProvider;

  public ExpenseViewModel_Factory(Provider<AccountRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ExpenseViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static ExpenseViewModel_Factory create(Provider<AccountRepository> repositoryProvider) {
    return new ExpenseViewModel_Factory(repositoryProvider);
  }

  public static ExpenseViewModel newInstance(AccountRepository repository) {
    return new ExpenseViewModel(repository);
  }
}
