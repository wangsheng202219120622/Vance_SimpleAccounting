// Generated by Dagger (https://dagger.dev).
package com.deweiwang.bookkeeping.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UserPreferencesRepository_Factory implements Factory<UserPreferencesRepository> {
  private final Provider<UserPreferences> userPreferencesProvider;

  public UserPreferencesRepository_Factory(Provider<UserPreferences> userPreferencesProvider) {
    this.userPreferencesProvider = userPreferencesProvider;
  }

  @Override
  public UserPreferencesRepository get() {
    return newInstance(userPreferencesProvider.get());
  }

  public static UserPreferencesRepository_Factory create(
      Provider<UserPreferences> userPreferencesProvider) {
    return new UserPreferencesRepository_Factory(userPreferencesProvider);
  }

  public static UserPreferencesRepository newInstance(UserPreferences userPreferences) {
    return new UserPreferencesRepository(userPreferences);
  }
}
