// Generated by Dagger (https://dagger.dev).
package com.deweiwang.bookkeeping.home;

import com.deweiwang.bookkeeping.data.AccountRepository;
import com.deweiwang.bookkeeping.data.UserPreferencesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<AccountRepository> repositoryProvider;

  private final Provider<UserPreferencesRepository> userPreferencesRepositoryProvider;

  public HomeViewModel_Factory(Provider<AccountRepository> repositoryProvider,
      Provider<UserPreferencesRepository> userPreferencesRepositoryProvider) {
    this.repositoryProvider = repositoryProvider;
    this.userPreferencesRepositoryProvider = userPreferencesRepositoryProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(repositoryProvider.get(), userPreferencesRepositoryProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<AccountRepository> repositoryProvider,
      Provider<UserPreferencesRepository> userPreferencesRepositoryProvider) {
    return new HomeViewModel_Factory(repositoryProvider, userPreferencesRepositoryProvider);
  }

  public static HomeViewModel newInstance(AccountRepository repository,
      UserPreferencesRepository userPreferencesRepository) {
    return new HomeViewModel(repository, userPreferencesRepository);
  }
}
